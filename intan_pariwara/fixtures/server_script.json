[
 {
  "allow_guest": 0,
  "api_method": "itemlist",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 20:33:21.114121",
  "module": null,
  "name": "ItemList",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n i.item_code,i.item_name,p.price_list,p.price_list_rate,i.stock_uom,i.item_group,g.item_group_name,g.parent_item_group\r\n FROM `tabItem` i\r\n LEFT JOIN `tabItem Price` p ON i.item_code = p.item_code\r\n LEFT JOIN `tabItem Group` g ON i.item_group = g.name\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data\r\n ",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "itemlist1",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-09 13:35:38.014009",
  "module": null,
  "name": "ItemList1",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n i.item_code,i.item_name,\r\n MAX(CASE p.price_list WHEN 'Retail 1' THEN p.price_list_rate ELSE 0 END) as 'Retail 1',\r\n MAX(CASE p.price_list WHEN 'Retail 2' THEN p.price_list_rate ELSE 0 END) as 'Retail 2',\r\n MAX(CASE p.price_list WHEN 'Retail 3' THEN p.price_list_rate ELSE 0 END) as 'Retail 3',\r\n MAX(CASE p.price_list WHEN 'Retail 4' THEN p.price_list_rate ELSE 0 END) as 'Retail 4',\r\n MAX(CASE p.price_list WHEN 'Retail 5' THEN p.price_list_rate ELSE 0 END) as 'Retail 5',\r\n MAX(CASE p.price_list WHEN 'Retail 6' THEN p.price_list_rate ELSE 0 END) as 'Retail 6',\r\n MAX(CASE p.price_list WHEN 'Retail 7' THEN p.price_list_rate ELSE 0 END) as 'Retail 7',\r\n MAX(CASE p.price_list WHEN 'Retail 8' THEN p.price_list_rate ELSE 0 END) as 'Retail 8',\r\n MAX(CASE p.price_list WHEN 'Retail 9' THEN p.price_list_rate ELSE 0 END) as 'Retail 9',\r\n MAX(CASE p.price_list WHEN 'Retail 10' THEN p.price_list_rate ELSE 0 END) as 'Retail 10',\r\n MAX(CASE p.price_list WHEN 'Retail 11' THEN p.price_list_rate ELSE 0 END) as 'Retail 11',\r\n MAX(CASE p.price_list WHEN 'Retail 12' THEN p.price_list_rate ELSE 0 END) as 'Retail 12',\r\n MAX(CASE p.price_list WHEN 'Retail 13' THEN p.price_list_rate ELSE 0 END) as 'Retail 13'\r\n FROM `tabItem` i\r\n LEFT JOIN `tabItem Price` p\r\n ON i.item_code = p.item_code\r\n GROUP BY i.item_code,i.item_name\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "customer",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 1,
  "event_frequency": "All",
  "modified": "2025-01-19 17:49:08.978664",
  "module": null,
  "name": "Customer",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n         SELECT\r\n         *\r\n         FROM `tabCustomer` c\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "customerbranch",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-10 14:30:06.486117",
  "module": null,
  "name": "CustomerBranch",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "values = frappe.form_dict.get('branch')\r\nquery = \"\"\"\r\n         SELECT\r\n         c.custom_branch,b.branch_name,c.name,c.customer_name,c.customer_type,c.customer_group,\r\n         c.custom_customer_fund_group,c.default_price_list,c.customer_primary_contact,c.custom_kab_kota,\r\n         c.territory,c.mobile_no,c.custom_penanggung_jawab,c.custom_email\r\n         FROM `tabCustomer` c\r\n         LEFT JOIN `tabBranch` b\r\n         ON c.custom_branch = b.branch\r\n         WHERE c.custom_branch = %s\r\n    \"\"\"\r\ndata = frappe.db.sql(query, values, as_dict=True)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 1,
  "api_method": "supplier",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-10 14:53:49.511262",
  "module": null,
  "name": "Supplier",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n name,supplier_name,country,supplier_group,supplier_type\r\n FROM `tabSupplier`\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data\r\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "POrder",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-11 11:04:55.716327",
  "module": null,
  "name": "POrder",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_all_purorder():\n   response = frappe.get_all(\"Purchase Order\", fields=[\"name\",\"supplier_name\",\"transaction_date\",\"schedule_date\",\"status\"])\n   return response\n   \n    \nfrappe.response['data'] = get_all_purorder()   ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "POrderDet",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-15 09:55:24.829756",
  "module": null,
  "name": "POrderDet",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_detail_purorder(invoice_name):\n    # Ambil dokumen parent\n    invoice = frappe.get_doc(\"Purchase Order\", invoice_name)\n    \n    # Ambil data parent dan child table\n    response = {\n        \"name\": invoice.name,\n        \"supplier\": invoice.supplier_name,\n        \"transaction_date\": invoice.transaction_date,\n        \"schedule_date\": invoice.schedule_date,\n        \"items\": []\n    }\n    \n    # Iterasi child table (Sales Invoice Item)\n    for item in invoice.items:\n        response[\"items\"].append({\n            \"item_code\": item.item_code,\n            \"item_name\": item.item_name,\n            \"uom\": item.uom,\n            \"qty\": item.qty,\n            \"rate\": item.rate\n        })\n    \n    return response\n    \nvalues = frappe.form_dict.get('id') \nfrappe.response['data'] = get_detail_purorder(values)\n    \n    ",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "SOrder",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 19:26:30.177689",
  "module": null,
  "name": "SOrder",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_all_purorder():\n   response = frappe.get_all(\"Sales Order\", fields=[\"name\",\"customer\",\"customer_name\",\"fund_source\",\"transaction_date\",\"delivery_date\",\n                                                    \"transaction_type\",\"custom_calon_siplah\",\"company\",\"branch\",\"set_warehouse\"])\n   return response\n   \n    \nfrappe.response['data'] = get_all_purorder()",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "SOrderDet",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 19:39:03.231983",
  "module": null,
  "name": "SOrderDet",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_detail_salorder(invoice_name):\n    # Ambil dokumen parent\n    invoice = frappe.get_doc(\"Sales Order\", invoice_name)\n    \n    # Ambil data parent dan child table\n    response = {\n        \"name\": invoice.name,\n        \"customer\": invoice.customer,\n        \"customer_name\": invoice.customer_name,\n        \"relasi\": invoice.relasi,\n        \"fund_source\": invoice.fund_source,\n        \"transaction_date\": invoice.transaction_date,\n        \"delivery_date\": invoice.delivery_date,\n        \"transaction_type\": invoice.transaction_type,\n        \"custom_calon_siplah\": invoice.custom_calon_siplah,\n        \"branch\": invoice.branch,\n        \"payment_schedule\": [],\n        \"items\": []\n    }\n    \n    # Iterasi child table (Sales Invoice Item)\n    for pay in invoice.payment_schedule:\n        response[\"payment_schedule\"].append({\n            \"due_date\": pay.due_date,\n            \"invoice_portion\": pay.invoice_portion,\n            \"discount\": pay.discount,\n            \"payment_amount\": pay.payment_amount\n        })\n    \n    # Iterasi child table (Sales Invoice Item)\n    for item in invoice.items:\n        response[\"items\"].append({\n            \"name\": item.name,\n            \"item_code\": item.item_code,\n            \"item_name\": item.item_name,\n            \"uom\": item.uom,\n            \"qty\": item.qty,\n            \"rate\": item.rate\n        })\n    \n    return response\n    \nvalues = frappe.form_dict.get('id') \nfrappe.response['data'] = get_detail_salorder(values)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "branch",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 17:19:54.911228",
  "module": null,
  "name": "Branch",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n name,branch,branch_name,custom_default_warehouse\r\n FROM `tabBranch`\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "warehouse",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 17:33:30.963886",
  "module": null,
  "name": "Warehouse",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n name,warehouse_name,company,warehouse_type,default_in_transit_warehouse\r\n FROM `tabWarehouse`\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "PreOrder",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-17 19:26:43.138955",
  "module": null,
  "name": "PreOrder",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_all_preorder():\n   response = frappe.get_all(\"Pre Order\", fields=[\"name\",\"customer\",\"customer_name\",\"fund_source\",\"transaction_date\",\"delivery_date\",\n                                                    \"transaction_type\",\"custom_calon_siplah\",\"status\",\"company\",\"branch\",\"set_warehouse\"])\n   return response\n   \n    \nfrappe.response['data'] = get_all_preorder()",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "PreOrderDet",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-21 15:24:10.003248",
  "module": null,
  "name": "PreOrderDet",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_detail_preorder(invoice_name):\n    # Ambil dokumen parent\n    invoice = frappe.get_doc(\"Pre Order\", invoice_name)\n    \n    # Ambil data parent dan child table\n    response = {\n        \"name\": invoice.name,\n        \"customer\": invoice.customer,\n        \"customer_name\": invoice.customer_name,\n        \"relasi\": invoice.relasi,\n        \"fund_source\": invoice.fund_source,\n        \"transaction_date\": invoice.transaction_date,\n        \"delivery_date\": invoice.delivery_date,\n        \"payment_date\": invoice.payment_date,\n        \"transaction_type\": invoice.transaction_type,\n        \"custom_calon_siplah\": invoice.custom_calon_siplah,\n        \"branch\": invoice.branch,\n        \"workflow_state\": invoice.workflow_state,\n        \"status\": invoice.status,\n        \"customer_group\": invoice.customer_group,\n        \"payment_schedule\": [],\n        \"items\": []\n    }\n    \n    # Iterasi child table (Sales Invoice Item)\n    for pay in invoice.payment_schedule:\n        response[\"payment_schedule\"].append({\n            \"due_date\": pay.due_date,\n            \"invoice_portion\": pay.invoice_portion,\n            \"discount\": pay.discount,\n            \"payment_amount\": pay.payment_amount\n        })\n        \n    # Iterasi child table (Sales Invoice Item)\n    for item in invoice.items:\n        response[\"items\"].append({\n            \"name\": item.name,\n            \"item_code\": item.item_code,\n            \"item_name\": item.item_name,\n            \"uom\": item.uom,\n            \"qty\": item.qty,\n            \"price\": item.price_list_rate\n        })\n    \n    return response\n    \nvalues = frappe.form_dict.get('id') \nfrappe.response['data'] = get_detail_preorder(values)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "GInduk",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-18 10:01:49.292015",
  "module": null,
  "name": "GInduk",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "data = frappe.db.sql(\"\"\"\r\n SELECT\r\n custom_default_warehouse,w.nama_gudang,branch,branch_name\r\n FROM `tabBranch` b\r\n LEFT JOIN `tabWarehouse` w\r\n ON b.custom_default_warehouse=w.name\r\n WHERE branch<>custom_default_warehouse\"\"\", as_dict=1)\r\n\r\nfrappe.response['data'] = data",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "Stock",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-23 10:59:37.875342",
  "module": null,
  "name": "Stock",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_stock(filters):\n   filters = json.loads(filters) if filters else {}    \n   response = frappe.get_all(\"Bin\", filters=filters, fields=[\"warehouse\",\"item_code\",\"actual_qty\",\"ordered_qty\",\"reserved_qty\",\"stock_uom\"])\n   return response\n   \nvalues = frappe.form_dict.get('filters')     \nfrappe.response['data'] = get_stock(values)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "KStock",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-23 11:48:44.780071",
  "module": null,
  "name": "KStock",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "def get_kstock(filters):\n   filters = json.loads(filters) if filters else {}    \n   response = frappe.get_all(\"Stock Ledger Entry\", filters=filters, fields=[\"warehouse\",\"item_code\",\"posting_date\",\"posting_datetime\",\"actual_qty\",\"qty_after_transaction\",\"stock_uom\"], order_by=\"posting_datetime\")\n   return response\n   \nvalues = frappe.form_dict.get('filters')     \nfrappe.response['data'] = get_kstock(values)",
  "script_type": "API"
 }
]